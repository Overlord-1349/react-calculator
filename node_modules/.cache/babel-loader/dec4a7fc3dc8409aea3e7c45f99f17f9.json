{"ast":null,"code":"var _jsxFileName = \"/Users/overlord/GDrive/it-dev/source-code/react/calculator/src/components/Calculator/Calculator.js\";\nimport React from 'react';\nimport CalcButton from './CalcButton';\n\nconst clear = (e, id) => {\n  let txtVal = document.getElementById(id);\n  txtVal.value = \"\";\n};\n\nconst setValue = (e, id) => {\n  let txtVal = document.getElementById(id);\n  txtVal.value = txtVal.value + e.target.value;\n};\n\nconst calculator = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: props.calculatorId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CalcButton, {\n    value: \"C\",\n    click: e => clear(e, props.calculatorId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(CalcButton, {\n    value: \"7\",\n    click: e => setValue(e, props.calculatorId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(CalcButton, {\n    value: \"8\",\n    click: e => setValue(e, props.calculatorId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(CalcButton, {\n    value: \"9\",\n    click: e => setValue(e, props.calculatorId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(CalcButton, {\n    value: \"X\",\n    click: e => clear(e, props.calculatorId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default calculator;","map":{"version":3,"sources":["/Users/overlord/GDrive/it-dev/source-code/react/calculator/src/components/Calculator/Calculator.js"],"names":["React","CalcButton","clear","e","id","txtVal","document","getElementById","value","setValue","target","calculator","props","calculatorId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAU;AACpB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAb;AACAC,EAAAA,MAAM,CAACG,KAAP,GAAe,EAAf;AACH,CAHD;;AAMA,MAAMC,QAAQ,GAAG,CAACN,CAAD,EAAIC,EAAJ,KAAW;AACxB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAb;AACAC,EAAAA,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACG,KAAP,GAAeL,CAAC,CAACO,MAAF,CAASF,KAAvC;AACH,CAHD;;AAKA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC1B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAEA,KAAK,CAACC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,GAAlB;AAAsB,IAAA,KAAK,EAAKV,CAAD,IAAOD,KAAK,CAACC,CAAD,EAAIS,KAAK,CAACC,YAAV,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,GAAlB;AAAsB,IAAA,KAAK,EAAKV,CAAD,IAAOM,QAAQ,CAACN,CAAD,EAAIS,KAAK,CAACC,YAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,GAAlB;AAAsB,IAAA,KAAK,EAAKV,CAAD,IAAOM,QAAQ,CAACN,CAAD,EAAIS,KAAK,CAACC,YAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,GAAlB;AAAsB,IAAA,KAAK,EAAKV,CAAD,IAAOM,QAAQ,CAACN,CAAD,EAAIS,KAAK,CAACC,YAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,GAAlB;AAAsB,IAAA,KAAK,EAAKV,CAAD,IAAOD,KAAK,CAACC,CAAD,EAAIS,KAAK,CAACC,YAAV,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAYH,CAbD;;AAeA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport CalcButton from './CalcButton';\n\nconst clear = (e, id) =>{\n    let txtVal = document.getElementById(id);\n    txtVal.value = \"\";\n}\n\n\nconst setValue = (e, id) => {\n    let txtVal = document.getElementById(id);\n    txtVal.value = txtVal.value + e.target.value;\n}\n\nconst calculator = (props) => {\n    return (\n        <div>\n            <input type='text' id={props.calculatorId} />\n            <br />\n            <CalcButton value='C' click= { (e) => clear(e, props.calculatorId) }  />\n            <br />\n            <CalcButton value='7' click= { (e) => setValue(e, props.calculatorId) }  />\n            <CalcButton value='8' click= { (e) => setValue(e, props.calculatorId) }  />\n            <CalcButton value='9' click= { (e) => setValue(e, props.calculatorId) }  />\n            <CalcButton value='X' click= { (e) => clear(e, props.calculatorId) }  />\n        </div>\n    )\n}\n\nexport default calculator;"]},"metadata":{},"sourceType":"module"}