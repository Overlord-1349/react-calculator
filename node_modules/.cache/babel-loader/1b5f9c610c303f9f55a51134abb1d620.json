{"ast":null,"code":"var _jsxFileName = \"/Users/overlord/GDrive/it-dev/source-code/web/react-calculator/src/containers/react-calculator.js\";\nimport React, { Component } from 'react';\nimport CalcGrid from '../components/react-calculator/calc-grid';\nimport Calculator from './calculator';\n\nclass ReactCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clear = e => {\n      this.inputValue = \"\";\n      let calc = this.state.calc;\n      calc.empty();\n      this.setState({\n        calc: calc\n      });\n    };\n\n    this.setValue = e => {\n      this.inputValue += e.target.value;\n    };\n\n    this.calc = (a, b, operation) => {\n      return a;\n    };\n\n    this.doOperation = (e, id) => {\n      const txtVal = document.getElementById(id);\n      const nmb = Number(txtVal.value);\n      let total = this.state.total;\n      total = this.calc(total, nmb, e.target.value === '=' ? this.state.operation : e.target.value);\n      this.setState({\n        total: total,\n        showingResults: true,\n        operation: e.target.value\n      });\n      txtVal.value = total;\n    };\n\n    let _id = this.props.id ? this.props.id : Math.random().toString(36).substring(7);\n\n    this.state = {\n      calc: new Calculator(),\n      id: _id\n    };\n    console.log(this.state.id);\n  }\n\n  set inputValue(value) {\n    document.getElementById(this.state.id).value = value;\n  }\n\n  get inputValue() {\n    return document.getElementById(this.state.id).value;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CalcGrid, {\n      id: `${this.state.id}`,\n      clear: this.clear,\n      setValue: this.setValue,\n      doOperation: this.doOperation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ReactCalculator;","map":{"version":3,"sources":["/Users/overlord/GDrive/it-dev/source-code/web/react-calculator/src/containers/react-calculator.js"],"names":["React","Component","CalcGrid","Calculator","ReactCalculator","constructor","props","clear","e","inputValue","calc","state","empty","setState","setValue","target","value","a","b","operation","doOperation","id","txtVal","document","getElementById","nmb","Number","total","showingResults","Math","random","toString","substring","console","log","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAuC;AAEnCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,KAlBkB,GAkBTC,CAAD,IAAM;AACV,WAAKC,UAAL,GAAkB,EAAlB;AACA,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACAA,MAAAA,IAAI,CAACE,KAAL;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAvBiB;;AAAA,SA0BlBI,QA1BkB,GA0BNN,CAAD,IAAO;AACd,WAAKC,UAAL,IAAmBD,CAAC,CAACO,MAAF,CAASC,KAA5B;AACH,KA5BiB;;AAAA,SA+BlBN,IA/BkB,GA+BX,CAACO,CAAD,EAAIC,CAAJ,EAAOC,SAAP,KAAqB;AAExB,aAAOF,CAAP;AACH,KAlCiB;;AAAA,SAqClBG,WArCkB,GAqCJ,CAACZ,CAAD,EAAIa,EAAJ,KAAW;AACrB,YAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf;AACA,YAAMI,GAAG,GAAGC,MAAM,CAACJ,MAAM,CAACN,KAAR,CAAlB;AACA,UAAIW,KAAK,GAAG,KAAKhB,KAAL,CAAWgB,KAAvB;AACAA,MAAAA,KAAK,GAAG,KAAKjB,IAAL,CAAUiB,KAAV,EAAiBF,GAAjB,EAAsBjB,CAAC,CAACO,MAAF,CAASC,KAAT,KAAmB,GAAnB,GAAwB,KAAKL,KAAL,CAAWQ,SAAnC,GAA+CX,CAAC,CAACO,MAAF,CAASC,KAA9E,CAAR;AAEA,WAAKH,QAAL,CAAc;AACVc,QAAAA,KAAK,EAAEA,KADG;AAEVC,QAAAA,cAAc,EAAE,IAFN;AAGVT,QAAAA,SAAS,EAAEX,CAAC,CAACO,MAAF,CAASC;AAHV,OAAd;AAKAM,MAAAA,MAAM,CAACN,KAAP,GAAeW,KAAf;AAEH,KAlDiB;;AAEd,QAAIN,GAAE,GAAG,KAAKf,KAAL,CAAWe,EAAX,GAAgB,KAAKf,KAAL,CAAWe,EAA3B,GAAgCQ,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAzC;;AACA,SAAKrB,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,IAAIP,UAAJ,EADG;AAETkB,MAAAA,EAAE,EAAEA;AAFK,KAAb;AAIAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWU,EAAvB;AACH;;AAED,MAAIZ,UAAJ,CAAeO,KAAf,EAAqB;AACjBO,IAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAKb,KAAL,CAAWU,EAAnC,EAAuCL,KAAvC,GAA+CA,KAA/C;AACH;;AAED,MAAIP,UAAJ,GAAgB;AACZ,WAAOc,QAAQ,CAACC,cAAT,CAAwB,KAAKb,KAAL,CAAWU,EAAnC,EAAuCL,KAA9C;AACH;;AAqCDmB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,EAAE,EAAG,GAAE,KAAKxB,KAAL,CAAWU,EAAG,EADzB;AAEI,MAAA,KAAK,EAAE,KAAKd,KAFhB;AAGI,MAAA,QAAQ,EAAE,KAAKO,QAHnB;AAII,MAAA,WAAW,EAAE,KAAKM,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAlEkC;;AAsEvC,eAAehB,eAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport CalcGrid from '../components/react-calculator/calc-grid';\nimport Calculator from './calculator';\n\nclass ReactCalculator extends Component{\n\n    constructor(props){\n        super(props);\n        let id = this.props.id ? this.props.id : Math.random().toString(36).substring(7);\n        this.state = {\n            calc: new Calculator(),\n            id: id,\n        }\n        console.log(this.state.id);\n    }\n\n    set inputValue(value){\n        document.getElementById(this.state.id).value = value;\n    }\n\n    get inputValue(){\n        return document.getElementById(this.state.id).value;\n    }\n    \n    clear = (e) =>{\n        this.inputValue = \"\";\n        let calc = this.state.calc;\n        calc.empty();\n        this.setState({calc: calc});\n    }\n\n\n    setValue = (e) => {    \n        this.inputValue += e.target.value;\n    }\n\n\n    calc = (a, b, operation) => {\n        \n        return a;\n    }\n\n\n    doOperation = (e, id) => {\n        const txtVal = document.getElementById(id);\n        const nmb = Number(txtVal.value);\n        let total = this.state.total;\n        total = this.calc(total, nmb, e.target.value === '='? this.state.operation : e.target.value);\n        \n        this.setState({\n            total: total,\n            showingResults: true,\n            operation: e.target.value\n        })\n        txtVal.value = total;\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <CalcGrid \n                    id={`${this.state.id}`}\n                    clear={this.clear}\n                    setValue={this.setValue}\n                    doOperation={this.doOperation}\n                    /> \n            </div>\n        )\n    }\n}\n\n\nexport default ReactCalculator;"]},"metadata":{},"sourceType":"module"}